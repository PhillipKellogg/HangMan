{"ast":null,"code":"var _jsxFileName = \"/home/phillipkellogg/Documents/pairProgramming/connect4/client/src/components/home/Home.jsx\";\nimport React from \"react\";\nimport \"./Home.scss\";\nimport Guess from \"./../guess/Guess\";\nimport axios from \"axios\";\nimport Hm1 from \"../../Assets/hangman1.png\";\nimport Hm2 from \"../../Assets/hangman2.png\";\nimport Hm3 from \"../../Assets/hangman3.png\";\nimport Hm4 from \"../../Assets/hangman4.png\";\nimport Hm5 from \"../../Assets/hangman5.png\";\nimport Hm6 from \"../../Assets/hangman6.png\";\nimport Hm7 from \"../../Assets/hangman8.png\";\nimport Hm8 from \"../../Assets/hangman9.png\";\nconst easyURL = \"http://localhost:8000/\";\nconst mediumURL = \"http://localhost:8000/medium\";\nconst hardURL = \"http://localhost:8000/hard\";\nlet hangman = Hm3;\nlet guessArr = [];\nlet correctArr = [];\nlet error = 0;\nlet anything = false;\n\nlet newWord = wrd => {\n  guessArr = [];\n\n  for (let i = 0; i < wrd.length; i++) {\n    correctArr[i] = wrd[i];\n    guessArr[i] = \"_\";\n  }\n}; // newWord(newWord1);\n\n\nconsole.log(guessArr, correctArr);\naxios.get(`http://localhost:8000`).then(response => {\n  console.log(response.data);\n  newWord(response.data[Math.floor(Math.random() * response.data.length)]);\n});\nconsole.log(guessArr, correctArr);\nlet alphabet = [];\nexport default class Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      guess: guessArr,\n      image: Hm1,\n      ltr: []\n    };\n\n    this.newGuess = e => {\n      //Here we can use this to update the website information.\n      e.preventDefault();\n      anything = false;\n\n      if (e.target.value !== \"\" || undefined || null) {\n        for (let i = 0; i < correctArr.length; i++) {\n          if (e.target.value === correctArr[i]) {\n            guessArr[i] = correctArr[i];\n            anything = true;\n            this.setState({\n              guess: guessArr\n            });\n          }\n        }\n\n        if (!anything) {\n          error += 1;\n          alphabet.push(e.target.value);\n          this.setState({\n            // ltr.push(e.target.value)\n            ltr: alphabet\n          });\n          console.log(this.state.ltr);\n\n          if (error === 1) {\n            hangman = Hm2;\n          } else if (error === 2) {\n            hangman = Hm3;\n          } else if (error === 3) {\n            console.log(error);\n            hangman = Hm4;\n          } else if (error === 4) {\n            hangman = Hm5;\n          } else if (error === 5) {\n            hangman = Hm6;\n          } else if (error === 6) {\n            hangman = Hm7;\n          }\n\n          this.setState({\n            image: hangman\n          });\n        }\n\n        console.log(e.target.value);\n        console.log(correctArr);\n\n        if (this.state.guess.toString() === correctArr.toString()) {\n          this.setState({\n            image: Hm8\n          });\n        }\n\n        console.log(this.state.guess);\n      }\n    };\n  }\n\n  // componentDidUpdate() {}\n  render() {\n    // console.log(this.state.guess);\n    return React.createElement(\"form\", {\n      onSubmit: this.newGuess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Hangman\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"USED LETTERS\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"strike\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.ltr.toString()))), React.createElement(\"img\", {\n      className: \"hangman__img\",\n      src: this.state.image,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"hangman__input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"guess\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.guess.toString(), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Guess\",\n      maxlength: \"1\",\n      required: true,\n      onChange: this.newGuess,\n      className: \"hangman__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"hangman__btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/home/phillipkellogg/Documents/pairProgramming/connect4/client/src/components/home/Home.jsx"],"names":["React","Guess","axios","Hm1","Hm2","Hm3","Hm4","Hm5","Hm6","Hm7","Hm8","easyURL","mediumURL","hardURL","hangman","guessArr","correctArr","error","anything","newWord","wrd","i","length","console","log","get","then","response","data","Math","floor","random","alphabet","Home","Component","state","guess","image","ltr","newGuess","e","preventDefault","target","value","undefined","setState","push","toString","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Home.scss\";\nimport Guess from \"./../guess/Guess\";\nimport axios from \"axios\";\n\nimport Hm1 from \"../../Assets/hangman1.png\";\nimport Hm2 from \"../../Assets/hangman2.png\";\nimport Hm3 from \"../../Assets/hangman3.png\";\nimport Hm4 from \"../../Assets/hangman4.png\";\nimport Hm5 from \"../../Assets/hangman5.png\";\nimport Hm6 from \"../../Assets/hangman6.png\";\nimport Hm7 from \"../../Assets/hangman8.png\";\nimport Hm8 from \"../../Assets/hangman9.png\";\n\nconst easyURL = \"http://localhost:8000/\";\nconst mediumURL = \"http://localhost:8000/medium\";\nconst hardURL = \"http://localhost:8000/hard\";\nlet hangman = Hm3;\nlet guessArr = [];\nlet correctArr = [];\nlet error = 0;\nlet anything = false;\nlet newWord = wrd => {\n  guessArr = [];\n  for (let i = 0; i < wrd.length; i++) {\n    correctArr[i] = wrd[i];\n    guessArr[i] = \"_\";\n  }\n};\n// newWord(newWord1);\nconsole.log(guessArr, correctArr);\naxios.get(`http://localhost:8000`).then(response => {\n  console.log(response.data);\n  newWord(response.data[Math.floor(Math.random() * response.data.length)]);\n});\nconsole.log(guessArr, correctArr);\nlet alphabet = [];\nexport default class Home extends React.Component {\n  state = { guess: guessArr, image: Hm1, ltr: [] };\n\n  newGuess = e => {\n    //Here we can use this to update the website information.\n    e.preventDefault();\n    anything = false;\n    if (e.target.value !== \"\" || undefined || null) {\n      for (let i = 0; i < correctArr.length; i++) {\n        if (e.target.value === correctArr[i]) {\n          guessArr[i] = correctArr[i];\n          anything = true;\n          this.setState({\n            guess: guessArr\n          });\n        }\n      }\n      if (!anything) {\n        error += 1;\n        alphabet.push(e.target.value);\n        this.setState({\n          // ltr.push(e.target.value)\n          ltr: alphabet\n        });\n        console.log(this.state.ltr);\n\n        if (error === 1) {\n          hangman = Hm2;\n        } else if (error === 2) {\n          hangman = Hm3;\n        } else if (error === 3) {\n          console.log(error);\n          hangman = Hm4;\n        } else if (error === 4) {\n          hangman = Hm5;\n        } else if (error === 5) {\n          hangman = Hm6;\n        } else if (error === 6) {\n          hangman = Hm7;\n        }\n        this.setState({\n          image: hangman\n        });\n      }\n\n      console.log(e.target.value);\n      console.log(correctArr);\n      if (this.state.guess.toString() === correctArr.toString()) {\n        this.setState({\n          image: Hm8\n        });\n      }\n      console.log(this.state.guess);\n    }\n  };\n\n  // componentDidUpdate() {}\n\n  render() {\n    // console.log(this.state.guess);\n\n    return (\n      <form onSubmit={this.newGuess}>\n        <div class=\"segment\">\n          <h1>Hangman</h1>\n          <h2>USED LETTERS</h2>\n          <h2>\n            {/* {console.log(this.state.ltr.alphabet)} */}\n            <strike>{this.state.ltr.toString()}</strike>\n          </h2>\n        </div>\n        <img className=\"hangman__img\" src={this.state.image} alt=\"\" />\n        <div className=\"hangman__input\">\n          <h2 className=\"guess\">{this.state.guess.toString()} </h2>\n          {/* <h2 className=\"guess\">{guessArr.toString()}</h2> */}\n          <div>\n            <label>\n              <input\n                type=\"text\"\n                placeholder=\"Guess\"\n                maxlength=\"1\"\n                required\n                onChange={this.newGuess}\n                className=\"hangman__text\"\n              />\n            </label>\n            {/* <span>_ _ _ _ _ _</span> */}\n          </div>\n          <button type=\"submit\" class=\"hangman__btn\">\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}